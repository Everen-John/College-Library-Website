# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deployment CI

on:
  push:
    branches: [ main ]
    
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm i
    - run: npm run test --coverage
    - run: npm run lint "./assets/js/**"
    - name: JSDoc Action
  # You may pin to the exact commit or the version.
  # uses: andstor/jsdoc-action@2fb2b536605bdebace2b92abb0601155d5ddc688
      # You may pin to the exact commit or the version.
      # uses: andstor/jsdoc-action@2fb2b536605bdebace2b92abb0601155d5ddc688
      uses: andstor/jsdoc-action@v1.2.0
      with:
        # Source directory to build documentation from
        source_dir: "./assets/js"
        # Output folder for the generated documentation
        output_dir: "./docs"
        # Recurse into subdirectories when scanning for source files
        recurse: # optional
        # The path to a JSDoc configuration file
        config_file: # optional
        # The JSDoc template to install
        template: "@pixi/jsdoc-template"
        # This input variable is deprecated in favour of "template"
        template_name: # optional
        # The relative location of the template files within the template package
        template_dir: # optional
        # The path to a Markdown file to be used as a the front page
        front_page: # optional
        
    - name: GitHub Pages
      # You may pin to the exact commit or the version.
      # uses: crazy-max/ghaction-github-pages@db4476a01402e1a7ce05f41832040eef16d14925
      uses: crazy-max/ghaction-github-pages@v2.5.0
      env:
        GH_PAT: ${{secrets.MY_PAT}}
      with:
        # Git domain (default github.com)
        domain: # optional, default is github.com
        # GitHub repository where assets will be deployed (default $GITHUB_REPOSITORY)
        repo: # optional
        # Git branch where assets will be deployed
        target_branch: # optional, default is gh-pages
        # Create incremental commit instead of doing push force
        keep_history: # optional, default is false
        # Allow an empty commit to be created
        allow_empty_commit: # optional, default is true
        # Build directory to deploy
        build_dir: "./docs"
        # The committer name and email address
        committer: # optional
        # The author name and email address
        author: # optional
        # Commit message
        commit_message: # optional
        # Write the given domain name to the CNAME file
        fqdn: # optional
        # Allow Jekyll to build your site
        jekyll: # optional, default is true
        # If enabled, nothing will be pushed
        dry_run: # optional, default is false
        # Enable verbose output
        verbose: # optional, default is false
        
        
        
    - name: Configure AWS Credentials
      # You may pin to the exact commit or the version.
      # uses: aws-actions/configure-aws-credentials@0d9a5be0dceea74e09396820e1e522ba4a110d2f
      uses: aws-actions/configure-aws-credentials@v1
      with:
        # AWS Access Key ID. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
        aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
        # AWS Secret Access Key. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
        aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
        # AWS Session Token
        aws-session-token: # optional
        # AWS Region, e.g. us-east-2
        aws-region: us-east-1
        # Whether to set the AWS account ID for these credentials as a secret value, so that it is masked in logs. Valid values are 'true' and 'false'. Defaults to true
        mask-aws-account-id: true
        # Use the provided credentials to assume an IAM role and configure the Actions environment with the assumed role credentials rather than with the provided credentials
        role-to-assume: # optional
        # Role duration in seconds (default: 6 hours)
        role-duration-seconds: # optional
        # Role session name (default: GitHubActions)
        role-session-name: # optional
        # The external ID of the role to assume
        role-external-id: # optional
        # Skip session tagging during role assumption
        role-skip-session-tagging: # optional
    - name: S3 Deploy
      # You may pin to the exact commit or the version.
      # uses: Reggionick/s3-deploy@aa30e453a8a4170856aac178f018c506a80501cf
      uses: Reggionick/s3-deploy@v3.1.1
      with:
        # Directory to deploy
        folder: "./"
        # Name of AWS Bucket
        bucket: college-library-website-bucket
        # The destination bucket region
        bucket-region: us-east-1
        # AWS CloudFront distribution ID
        dist-id: # optional
        # AWS CloudFront invalidation path(s)
        invalidation: # optional
        # Removes files in S3 that are not available in the local copy of the directory
        delete-removed: # optional
        # Use this parameter to specify Cache-Control: no-cache, no-store, must-revalidate header
        no-cache: # optional
        # Upload files with private ACL, needed for S3 static website hosting
        private: # optional
